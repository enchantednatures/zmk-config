/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define HYP LS(LC(LA(LGUI)))

&mt {
    tapping-term-ms = <200>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        adjust {
            bindings = <&mo 4>;
            key-positions = <39 38>;
        };

        toggle_layer {
            bindings = <&tog 5>;
            key-positions = <14 15 16>;
        };

        toggle_rhl {
            bindings = <&tog 6>;
            key-positions = <19 20 21>;
        };

        shift_symbol {
            bindings = <&mo 3>;
            key-positions = <38 40>;
        };
    };

    macros {
        cs_lambda: cs_lambda {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "CS_LAMBDA";
        };
        shift_shift: shift_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LEFT_SHIFT>;
            label = "SHIFT_SHIFT";
        };
    };

    behaviors {
        copy_paste: copy_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_PASTE";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>, <&kp LG(V)>;

            tapping-term-ms = <100>;
        };
        media_controls: media_controls {
            compatible = "zmk,behavior-tap-dance";
            label = "MEDIA_CONTROLS";
            #binding-cells = <0>;
            bindings = <&kp K_PLAY_PAUSE>, <&kp K_NEXT>, <&kp K_BACK>;
        };
        volume_controls: volume_controls {
            compatible = "zmk,behavior-tap-dance";
            label = "VOLUME_CONTROLS";
            #binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp K_MUTE>;

            tapping-term-ms = <100>;
        };
        win_copy_paste: win_copy_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_COPY_PASTE";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LC(V)>;

            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&win_copy_paste  &kp Q           &kp W               &kp E           &kp R             &kp T                     &kp Y                         &kp U                   &kp I                    &kp O        &kp P               &none
&none            &mt LEFT_ALT A  &mt LEFT_CONTROL S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &mt LS(LA(LC(LGUI))) G    &mt LA(LC(LG(LEFT_SHIFT))) H  &mt RIGHT_SHIFT J       &mt RIGHT_GUI K          &mt RCTRL L  &mt RALT SEMICOLON  &none
&none            &kp Z           &kp X               &kp C           &kp V             &kp B                     &kp N                         &kp M                   &kp COMMA                &kp DOT      &kp FSLH            &none
                                                     &mt LGUI TAB    &mt LSHIFT RET    &lt 1 SPACE               &lt 2 BACKSPACE               &mt RIGHT_SHIFT ESCAPE  &mt RIGHT_CONTROL SPACE
            >;
        };

        lower {
            bindings = <
&kp LG(LS(S))         &kp N1    &kp N2                &kp N3          &kp N4         &kp N5           &kp N6     &kp N7        &kp N8      &kp N9             &kp N0    &kp ASTRK
&cs_lambda            &kp LBKT  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp LESS_THAN  &kp SEMICOLON    &kp UNDER  &kp QUESTION  &kp EQUAL   &kp DOUBLE_QUOTES  &kp PIPE  &kp AT_SIGN
&kp LG(LS(NUMBER_4))  &none     &none                 &kp ASTERISK    &kp AMPERSAND  &copy_paste      &none      &shift_shift  &kp GRAVE   &kp TILDE          &none     &none
                                                      &none           &none          &none            &none      &mo 3         &kp DELETE
            >;

            label = "lower";
        };

        raise {
            bindings = <
&trans                &kp F1            &kp F2            &kp F3                &kp F4                &kp F5           &kp F6    &kp F7    &kp F8  &kp F9     &kp F10  &kp F11
&kp LG(LEFT_BRACKET)  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(N3)            &kp LC(N4)            &kp LC(LA(G))    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &kp F12
&trans                &kp LA(LS(N1))    &kp LS(LA(N2))    &kp LS(LA(NUMBER_3))  &kp LS(LA(NUMBER_4))  &trans           &trans    &trans    &trans  &trans     &trans   &trans
                                                          &trans                &trans                &trans           &trans    &trans    &trans
            >;

            label = "raise";
        };

        layer_4 {
            bindings = <
&trans       &trans             &trans                 &trans           &trans            &trans       &trans     &trans    &trans    &trans   &trans         &trans
&kp PERCENT  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp GREATER_THAN  &kp COLON    &kp MINUS  &kp EXCL  &kp PLUS  &kp SQT  &kp BACKSLASH  &kp HASH
&trans       &trans             &trans                 &trans           &trans            &trans       &trans     &trans    &trans    &trans   &trans         &trans
                                                       &trans           &trans            &trans       &trans     &trans    &trans
            >;
        };

        bt {
            bindings = <
&none       &none         &none            &none         &none         &none           &none     &none          &none      &none    &none   &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END  &trans  &trans
&none       &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_MUTE    &trans        &trans          &trans    &trans         &trans     &trans   &trans  &trans
                                           &none         &trans        &none           &none     &none          &none
            >;

            label = "bt";
        };

        lhs {
            bindings = <
&trans        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp C_VOL_DN  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp K_MUTE    &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "lhs";
        };

        num_pad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N7           &kp N8  &kp N9  &kp PLUS   &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N4           &kp N5  &kp N6  &kp MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp N1           &kp N2  &kp N3  &kp FSLH   &trans
                        &trans  &trans  &trans    &trans  &kp KP_NUMBER_0  &trans
            >;

            label = "num_pad";
        };
    };
};
